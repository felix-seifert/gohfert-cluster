---
- name: Manage GitHub Actions runner
  hosts: gha_runners
  become: true

  pre_tasks:
    - name: Fail if both deploy and remove are tagged
      ansible.builtin.fail:
        msg: "You cannot use both 'deploy' and 'remove' tags at the same time."
      tags: [deploy, remove]
      when: "'deploy' in ansible_run_tags and 'remove' in ansible_run_tags"

    - name: Set default gha_runner_state (deploy mode)
      ansible.builtin.set_fact:
        gha_runner_state: started
      tags: always
      when: "'remove' not in ansible_run_tags"

    - name: Set gha_runner_state to absent if remove is tagged
      ansible.builtin.set_fact:
        gha_runner_state: absent
      tags: always
      when: "'remove' in ansible_run_tags"

    - name: Show gha_runner_state
      ansible.builtin.debug:
        var: gha_runner_state
      tags: always

    - name: Ensure runner user presence
      ansible.builtin.user:
        name: "{{ gha_runner_user }}"
        state: present
        create_home: true
        shell: /bin/bash
      tags: always
      when: gha_runner_state == 'started'

  tasks:
    - name: Ensure 'make' package is installed (cross-distro)
      ansible.builtin.package:
        name: make
        state: present
      become: true
      tags: always
      when: gha_runner_state == 'started'

  roles:
    - role: githubixx.kubectl
      vars:
        kubectl_version: "{{ k_version }}"
        kubectl_checksum_archive: "{{ k_checksum_archive }}"
        kubectl_arch: "{{ k_arch }}"
      tags: [deploy]

    - role: monolithprojects.github_actions_runner
      vars:
        access_token: "{{ github_pat }}"
        github_account: "{{ account }}"
        github_repo: "{{ repo }}"
        runner_user: "{{ gha_runner_user }}"
        runner_name: "{{ gha_runner_name }}"
        runner_version: "{{ gha_runner_version }}"
        runner_state: "{{ gha_runner_state }}"
        runner_labels:
          - "{{ gha_runner_name }}"
      tags: always

  post_tasks:
    - name: Kill processes of runner user when stopping runner
      ansible.builtin.shell: "pkill -u {{ gha_runner_user }} || true"
      become: true
      register: pkill_result
      changed_when: pkill_result.rc == 0
      failed_when: false   # ignore failures when no process exists
      tags: [remove]
      when: gha_runner_state == 'absent'

    - name: Ensure runner user absence
      ansible.builtin.user:
        name: "{{ gha_runner_user }}"
        state: absent
        remove: true
      tags: [remove]
      when: gha_runner_state == 'absent'
